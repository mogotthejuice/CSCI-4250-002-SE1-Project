@page "/board/{playerNames}"
@inject IJSRuntime JSRuntime
@using Microsoft.JSInterop
@using static GameLibrary.Services.GameController
@using GameLibrary.Interfaces
@using GameLibrary.Models
@using GameboardComponents



<h1>@message</h1>

@if (ButtonClicked == true && Game.Round == GameRound.PLACE_FIGURES) {
    <PlaceDeveloperDialogBox Location="ClickedLocation" OnPlaceDeveloper="ButtonClickedChanged" />
}
else if (ButtonClicked == true && Game.Round == GameRound.TAKE_ACTIONS) {
    <TakeActionDialogBox Location="ClickedLocation" OnPlaceDeveloper="ButtonClickedChanged" />
}
else {
    <table>

        <!-- #region Location Buttons -->

        <tr>
            <th class="padColOne">
                <LocationButton Location=@Game.Locations[4] LocationClick="@(e => LocationClick(e, Game.Locations[4]))" />
            </th>
            <th class="padColOne">
                <LocationButton Location=@Game.Locations[0] LocationClick="@(e => LocationClick(e, Game.Locations[0]))" />
            </th>
            <th class="padColOne">
                <LocationButton Location=@Game.Locations[1] LocationClick="@(e => LocationClick(e, Game.Locations[1]))" />
            </th>
        </tr>

        <tr>
            <th class="padColOne">
                <LocationButton Location=@Game.Locations[5] LocationClick="@(e => LocationClick(e, Game.Locations[5]))" />
            </th>
            <th></th>
            <th class="padColOne">
                <LocationButton Location=@Game.Locations[2] LocationClick="@(e => LocationClick(e, Game.Locations[2]))" />
            </th>
        </tr>

        <tr>
            <th class="padColOne">
                <LocationButton Location=@Game.Locations[6] LocationClick="@(e => LocationClick(e, Game.Locations[6]))" />
            </th>
            <th class="padColOne">
                <LocationButton Location=@Game.Locations[7] LocationClick="@(e => LocationClick(e, Game.Locations[7]))" />
            </th>
            <th class="padColOne">
                <LocationButton Location=@Game.Locations[3] LocationClick="@(e => LocationClick(e, Game.Locations[3]))" />
            </th>
        </tr>
        <tr>
            <th class="padColOne">
                <LocationButton Location=@Game.Locations[12] LocationClick="@(e => LocationClick(e, Game.Locations[12]))" />
            </th>
            <th></th>
            <th class="padColOne">
                <LocationButton Location=@Game.Locations[8] LocationClick="@(e => LocationClick(e, Game.Locations[8]))" />
            </th>
            <th class="padColOne">
                <LocationButton Location=@Game.Locations[9] LocationClick="@(e => LocationClick(e, Game.Locations[9]))" />
            </th>
            <th class="padColOne">
                <LocationButton Location=@Game.Locations[10] LocationClick="@(e => LocationClick(e, Game.Locations[10]))" />
            </th>
            <th class="padColOne">
                <LocationButton Location=@Game.Locations[11] LocationClick="@(e => LocationClick(e, Game.Locations[11]))" />
            </th>
        </tr>
        <tr>
            <th class="padColOne">
                <LocationButton Location=@Game.Locations[13] LocationClick="@(e => LocationClick(e, Game.Locations[13]))" />
            </th>
        </tr>
        <tr>
            <th class="padColOne">
                <LocationButton Location=@Game.Locations[14] LocationClick="@(e => LocationClick(e, Game.Locations[14]))" />
            </th>
        </tr>
        <tr>
            <th class="padColOne">
                <LocationButton Location=@Game.Locations[15] LocationClick="@(e => LocationClick(e, Game.Locations[15]))" />
            </th>
        </tr>

        <!-- #endregion -->
        <!-- #region Player Resource Board -->

        <tr>
            <th class="padColOne">
                <h3 style="display: block">Game Round: @Game.Round</h3>
                <ResourceBoardComponent _Player="Game.PlayersInRound.Peek()" />
            </th>
        </tr>

        <!-- #endregion -->

    </table>
}



<!-- #region Code-Behind -->

@code
{
    [Parameter]
    public string playerNames { get; set; }

    public Gameboard Game { get; set; }

    public bool ButtonClicked { get; set; }

    public ILocation ClickedLocation { get; set; }

    private string message = "";

    protected override void OnInitialized() {
        Game = InitializeGameboard(playerNames);
        message = GameLog.GetInstance().CurrentMessage;
        ButtonClicked = false;
    }

    private async Task LocationClick(MouseEventArgs e, ILocation location) {
        ButtonClicked = true;
        ClickedLocation = location;
        this.StateHasChanged();

        if (Game.Round == GameRound.TALLY_SCORE) {
            Game.Round = GameRound.PLACE_FIGURES;
        }
        
    }

    protected async Task ButtonClickedChanged() {
        ButtonClicked = false;
        message = GameLog.GetInstance().CurrentMessage;
    }
}

<!-- #endregion -->
