@page "/board"

@using Microsoft.JSInterop
@using static GameLibrary.Services.GameController

@inject IJSRuntime JSRuntime
<h1>@message</h1>
<table>

    <tr>
        <th class="padColOne"><button @onclick="@(e => Click(e, buttonOver))">Overtime</button></th>
        <th class="padColOne"><button @onclick="@(e => Click(e, buttonCafe))">Cafe<br>(Coffee)</button></th>
        <th class="padColOne"><button @onclick="@(e => Click(e, buttonStaples))">Staples <br> (USB Sticks)</button></th>
    </tr>

    <tr>
        <th class="padColOne"><button @onclick="@(e => Click(e, buttonInvestmentField))">Field<br>(Bitcoin Investment)</button></th>
        <th></th>
        <th class="padColOne"><button @onclick="@(e => Click(e, buttonFactory))">Factory<br>(CPU Cores)</button></th>
    </tr>
    
    <tr>

        <th class="padColOne"><button @onclick="@(e => Click(e, buttonTrainingCenter))">Training<br>Center</button></th>
        <th class="padColOne"><button @onclick="@(e => Click(e, buttonToolLocation))">Overclocking Stack</button></th>
        <th class="padColOne"><button @onclick="@(e => Click(e, buttonPowerPlant))">Power Plant<br>Power</button></th>
    </tr>
    <tr>
        <th class="padColOne"><button @onclick="@(e => Click(e, buttonLic1))">License Tiles</button></th>
        <th></th>
        <th class="padColOne"><button @onclick="@(e => Click(e, buttonCon1))">Con Card</button></th>
        <th class="padColOne"><button @onclick="@(e => Click(e, buttonCon2))">Con Card</button></th>
        <th class="padColOne"><button @onclick="@(e => Click(e, buttonCon3))">Con Card</button></th>
        <th class="padColOne"><button @onclick="@(e => Click(e, buttonCon4))">Con Card</button></th>
    </tr>
    <tr>
        <th class="padColOne"><button @onclick="@(e => Click(e, buttonLic2))">License Tiles</button></th>
    </tr>
    <tr>
        <th class="padColOne"><button @onclick="@(e => Click(e, buttonLic3))">License Tiles</button></th>
    </tr>
    <tr>


        <th class="padColOne"><button @onclick="@(e => Click(e, buttonLic4))">License Tiles</button></th>
        <th>Player Name</th>
        <th></th>
    </tr>
    <tr>
        <th  class="padColOne">
            <h3>Player Score: @PlayerScore</h3>
        </th>
    </tr>
</table>

@code
{
    int PlayerScore = 0;
    int buttonCafe = 0;
    int buttonStaples = 1;
    int buttonFactory = 2;
    int buttonPowerPlant = 3;
    int buttonOver = 4;
    int buttonInvestmentField = 5;
    int buttonTrainingCenter = 6;
    int buttonToolLocation = 7;

    int buttonLic1 = 10;
    int buttonLic2 = 11;
    int buttonLic3 = 12;
    int buttonLic4 = 13;

    int buttonCon1 = 14;
    int buttonCon2 = 15;
    int buttonCon3 = 16;
    int buttonCon4 = 17;



    private string message = "";

    private async void Click(MouseEventArgs e, int buttonNumber)
    {

        //Round divided into three phases and we need to check which phase we are in


        //Place figures section
        //1. Figure out which button was clicked
        //2. Open dialog for players to input how many players they will place
        //3. Ensure player has enough players to place
        #region PlaceFigures
        var temp = await JSRuntime.InvokeAsync<string>("prompt", "How many players would you like to place? ");
        int playerPlace = Int32.Parse(temp);

        switch(buttonNumber)
        {
            case 0:
                //Player clicked the cafe
                break;
            case 1:
                //Player clicked Staples 
                break;
            case 2:
                //Player clicked the factory
                break;
            case 3:
                //Player clicked the power plant
                break;
            case 4:
                //Player clicked overtime
                break;
            case 5:
                //Player clicked the investment field 
                break;
            case 6:
                //Player clicked the training center
                break;
            case 7:
                //Player clicked the tool location
                break;
            case 10:
                //Player clicked consulting card 1
                break;
            case 11:
                //Player clicked consulting card 2
                break;
            case 12:
                //Player clicked consulting card 3
                break;
            case 13:
                //Player clicked license card 4
                break;
            case 14:
                //Player clicked consulting card 1
                break;
            case 15:
                //Player clicked consulting card 2
                break;
            case 16:
                //Player clicked consulting card 3 
                break;
            case 17:
                //Player clicked consulting card 4
                break;
        }

        #endregion Place Figures
        message = $"You wanted to place {playerPlace} figures";
         this.StateHasChanged();
    }
}