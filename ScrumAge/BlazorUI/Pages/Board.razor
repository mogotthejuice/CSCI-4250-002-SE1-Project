@page "/board/{playerNames}"
@inject IJSRuntime JSRuntime
@using Microsoft.JSInterop
@using static GameLibrary.Services.GameController
@using GameLibrary.Interfaces
@using GameLibrary.Models.Locations

<h1>@message</h1>
<table>

    <tr>
        <th class="padColOne"><button @onclick="@(e => PlaceDeveloperClick(e, Game.Locations[4]))">@Game.Locations[4].Name</button></th>
        <th class="padColOne"><button @onclick="@(e => PlaceDeveloperClick(e, Game.Locations[0]))">@Game.Locations[0].Name<br>(Coffee)</button></th>
        <th class="padColOne"><button @onclick="@(e => PlaceDeveloperClick(e, Game.Locations[1]))">@Game.Locations[1].Name <br> (USB Sticks)</button></th>
    </tr>

    <tr>
        <th class="padColOne"><button @onclick="@(e => PlaceDeveloperClick(e, Game.Locations[5]))">@Game.Locations[5].Name<br>(Bitcoin Investment)</button></th>
        <th></th>
        <th class="padColOne"><button @onclick="@(e => PlaceDeveloperClick(e, Game.Locations[2]))">@Game.Locations[2].Name<br>(CPU Cores)</button></th>
    </tr>

    <tr>

        <th class="padColOne"><button @onclick="@(e => PlaceDeveloperClick(e, Game.Locations[6]))">@Game.Locations[6].Name<br>Center</button></th>
        <th class="padColOne"><button @onclick="@(e => PlaceDeveloperClick(e, null))">Overclock ~ Nerd</button></th>                                                @*This button needs to be updated with the object -- NOT YET CREATED*@
        <th class="padColOne"><button @onclick="@(e => PlaceDeveloperClick(e, Game.Locations[3]))">@Game.Locations[3].Name<br>Power</button></th>
    </tr>
    <tr>
        <th class="padColOne"><button @onclick="@(e => PlaceDeveloperClick(e, null))">License Tiles</button></th>                                                   @*This button needs to be updated with the object -- NOT YET CREATED*@
        <th></th>
        <th class="padColOne"><button @onclick="@(e => PlaceDeveloperClick(e, null))">Con Card</button></th>                                                        @*This button needs to be updated with the object -- NOT YET CREATED*@
        <th class="padColOne"><button @onclick="@(e => PlaceDeveloperClick(e, null))">Con Card</button></th>                                                        @*This button needs to be updated with the object -- NOT YET CREATED*@
        <th class="padColOne"><button @onclick="@(e => PlaceDeveloperClick(e, null))">Con Card</button></th>                                                        @*This button needs to be updated with the object -- NOT YET CREATED*@
        <th class="padColOne"><button @onclick="@(e => PlaceDeveloperClick(e, null))">Con Card</button></th>                                                        @*This button needs to be updated with the object -- NOT YET CREATED*@
    </tr>
    <tr>
        <th class="padColOne"><button @onclick="@(e => PlaceDeveloperClick(e, null))">License Tiles</button></th>                                                   @*This button needs to be updated with the object -- NOT YET CREATED*@
    </tr>
    <tr>
        <th class="padColOne"><button @onclick="@(e => PlaceDeveloperClick(e, null))">License Tiles</button></th>                                                   @*This button needs to be updated with the object -- NOT YET CREATED*@
    </tr>
    <tr>


        <th class="padColOne"><button @onclick="@(e => PlaceDeveloperClick(e, null))">License Tiles</button></th>                                                   @*This button needs to be updated with the object -- NOT YET CREATED*@
        <th>Player Name</th>
        <th></th>
    </tr>
    <tr>
        <th class="padColOne">
            <h3>Player Score: @PlayerScore</h3>
        </th>
    </tr>
</table>

@code
{
    [Parameter]
    public string playerNames { get; set; }
    public Gameboard Game { get; set; }

    int PlayerScore = 0;


    private string message = "";

    protected override void OnInitialized() {
        Game = InitializeGameboard(playerNames);
    }

    private void PlaceDeveloperClick(MouseEventArgs e, ILocation location) {

        //Round divided into three phases and we need to check which phase we are in


        //Place figures section
        //1. Figure out which button was clicked
        //2. Open dialog for players to input how many players they will place
        //3. Ensure player has enough players to place
        #region PlaceFigures
        List<ILocation> Locations = new List<ILocation>();
#if !DEBUG
    var temp = await JSRuntime.InvokeAsync<string>("prompt", "How many players would you like to place? ");
#endif

#if DEBUG
        var temp = "2";
#endif
        int playerPlace = Int32.Parse(temp);
        Player tempPlayer = Game.Players[0];
        try {
            PlaceDevelopers(tempPlayer, playerPlace, location);
            message = $"You wanted to place {playerPlace} figures";
            this.StateHasChanged();
        }
        catch (ArgumentException) {

            message = $"You wanted to place {playerPlace} figures...that's too many";
        }
        #endregion Place Figures
    }
}