using NUnit.Framework;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;



namespace UnitTesting 
{

    [Test Class]
    public class OverclockTests
    {

        [ TestMethod]
         public void Upgrade_isAtMaxLevel_UpgradeException()
         {
             //object setup
             var overclock = new Overclock();

             //Assign level value
             int overclock.Level =4;
             

             //Act + Assert
             Assert.Throws<InvalidOperationException>(() => Overclock.Upgrade(overclock.Level);


        }
         [ TestMethod]
          public void Upgrade_isNotMaxLevel_Upgraded()
          {
             //Assign level value
             var overclock = new Overclock();
             int overclock.Level = 1;
             int num = 2;

             if (overclock.level < 4)
             {
                 overclock.level++;

             }
             //Assert
             Assert.AreEqual(num, overclock.level);


          }
           [ TestMethod]
         public void Overclock_hasBeenUsed_UseOperationException()
         {
              
            //Arrange
            var overclock = new Overclock();
            overclock.HasBeenUsed = False;
            
            //Act + Assert
             Assert.Throws<InvalidOperationException>(() => Overclock.Use(overclock.HasBeenUsed);


        }
         public void Overclock_hasNotBeenUsed_Use()
         {
              
            //Arrange
            var overclock = new Overclock();
            overclock.HasBeenUsed = True;
            
            //Assert
             Assert.IsTrue(overclock.HasBeenUsed);


        }
         public void Overclock_Reset()
         {
              
            //Arrange
            var overclock = new Overclock();
            overclock.HasBeenUsed = False;
            
            //Assert
             Assert.IsFalse(overclock.HasBeenUsed);


        }
    
        



    }

    

    
}